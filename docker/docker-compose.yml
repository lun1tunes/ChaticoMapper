name: mapper-app

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: mapper-postgres
    environment:
      POSTGRES_DB: chatico_mapper
      POSTGRES_USER: chatico_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-chatico_password}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    networks:
      - mapper-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatico_user -d chatico_mapper"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: mapper-redis
    command: >
      redis-server
      --appendonly yes
      --appendfsync everysec
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --requirepass ${REDIS_PASSWORD:-chatico_password}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6380}:6379"
    networks:
      - mapper-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    restart: unless-stopped

  # Chatico Mapper App
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: chatico-mapper-app:${VERSION:-latest}
    container_name: mapper-app
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql+asyncpg://chatico_user:${POSTGRES_PASSWORD:-chatico_password}@postgres:5432/chatico_mapper
      HOST: 0.0.0.0
      PORT: 8100
    ports:
      - "${APP_PORT:-8100}:8100"
    networks:
      - mapper-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8100/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
    name: mapper_app_postgres_data
  redis_data:
    driver: local
    name: mapper_app_redis_data

networks:
  mapper-network:
    driver: bridge
